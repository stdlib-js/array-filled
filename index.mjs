// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import{isPrimitive as r}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string@v0.1.1-esm/index.mjs";import{isPrimitive as e}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nonnegative-integer@v0.1.0-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-collection@v0.1.0-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-arraybuffer@v0.1.1-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-object@v0.1.1-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@v0.1.1-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/array-ctors@v0.1.0-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/blas-ext-base-gfill@v0.1.0-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-filled@v0.1.0-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-iterator-symbol-support@v0.1.1-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/symbol-iterator@v0.1.1-esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/iter-length@v0.1.1-esm/index.mjs";import v from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";var h=d();function u(r,e){var t;for(t=[];!r.next().done;)t.push(e);return t}function f(r,e){var t;for(t=0;t<r.length;t++)r.set(e,t);return r}function g(){var d,g,j,y,b,c,w;if(g=arguments.length,(g-=1)>=0&&r(arguments[g])?(j=arguments[g],g-=1):j="float64",null===(y=a(j)))throw new TypeError(v("invalid argument. Must provide a recognized data type. Value: `%s`.",j));if("generic"===j){if(g<=0)return[];if(d=arguments[0],w=arguments[1],1===g){if(e(w)?c=w:t(w)&&(c=w.length),void 0!==c)return l(d,c);if(i(w))throw new Error("invalid arguments. Creating a generic array from an ArrayBuffer is not supported.");if(n(w)){if(!1===h)throw new TypeError(v("invalid argument. Environment lacks Symbol.iterator support. Must provide a length, typed array, or array-like object. Value: `%s`.",w));if(!s(w[m]))throw new TypeError(v("invalid argument. Must provide a length, typed array, array-like object, or an iterable. Value: `%s`.",w));if(w=w[m](),!s(w.next))throw new TypeError(v("invalid argument. Must provide a length, typed array, array-like object, or an iterable. Value: `%s`.",w));return u(w,d)}throw new TypeError(v("invalid argument. Must provide a length, typed array, array-like object, or an iterable. Value: `%s`.",w))}if(i(w))throw new Error("invalid arguments. Creating a generic array from an ArrayBuffer is not supported.");throw new TypeError(v("invalid argument. Must provide a length, typed array, array-like object, or an iterable. Value: `%s`.",w))}if(g<=0)return new y(0);if(1===g)if(t(w=arguments[1]))b=new y(w.length);else if(i(w))b=new y(w);else if(e(w))b=new y(w);else{if(!n(w))throw new TypeError(v("invalid argument. Must provide a length, typed array, array-like object, or an iterable. Value: `%s`.",w));if(!1===h)throw new TypeError(v("invalid argument. Environment lacks Symbol.iterator support. Must provide a length, typed array, or array-like object. Value: `%s`.",w));if(!s(w[m]))throw new TypeError(v("invalid argument. Must provide a length, typed array, array-like object, or an iterable. Value: `%s`.",w));if(w=w[m](),!s(w.next))throw new TypeError(v("invalid argument. Must provide a length, typed array, array-like object, or an iterable. Value: `%s`.",w));b=new y(p(w))}else b=2===g?new y(arguments[1],arguments[2]):new y(arguments[1],arguments[2],arguments[3]);return b.length>0&&(/^complex/.test(j)?f(b,arguments[0]):o(b.length,arguments[0],b,1)),b}export{g as default};
//# sourceMappingURL=index.mjs.map
