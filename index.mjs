// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import{isPrimitive as e}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string@v0.2.0-esm/index.mjs";import{isPrimitive as r}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nonnegative-integer@v0.2.0-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-collection@v0.2.0-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-arraybuffer@v0.2.0-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-object@v0.2.0-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@v0.2.0-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/array-ctors@v0.1.0-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/blas-ext-base-gfill@v0.1.0-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-filled@v0.2.0-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-iterator-symbol-support@v0.2.0-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/symbol-iterator@v0.2.0-esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/iter-length@v0.2.0-esm/index.mjs";import v from"https://cdn.jsdelivr.net/gh/stdlib-js/array-defaults@v0.2.0-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";var u=d(),f=v.get("dtypes.default");function g(e,r){var t;for(t=[];!e.next().done;)t.push(r);return t}function j(e,r){var t;for(t=0;t<e.length;t++)e.set(r,t);return e}function y(){var d,v,y,b,c,w,x;if(v=arguments.length,(v-=1)>=0&&e(arguments[v])?(y=arguments[v],v-=1):y=f,null===(b=a(y)))throw new TypeError(h("invalid argument. Must provide a recognized data type. Value: `%s`.",y));if("generic"===y){if(v<=0)return[];if(d=arguments[0],x=arguments[1],1===v){if(r(x)?w=x:t(x)&&(w=x.length),void 0!==w)return l(d,w);if(i(x))throw new Error("invalid arguments. Creating a generic array from an ArrayBuffer is not supported.");if(s(x)){if(!1===u)throw new TypeError(h("invalid argument. Environment lacks Symbol.iterator support. Must provide a length, typed array, or array-like object. Value: `%s`.",x));if(!n(x[m]))throw new TypeError(h("invalid argument. Must provide a length, typed array, array-like object, or an iterable. Value: `%s`.",x));if(x=x[m](),!n(x.next))throw new TypeError(h("invalid argument. Must provide a length, typed array, array-like object, or an iterable. Value: `%s`.",x));return g(x,d)}throw new TypeError(h("invalid argument. Must provide a length, typed array, array-like object, or an iterable. Value: `%s`.",x))}if(i(x))throw new Error("invalid arguments. Creating a generic array from an ArrayBuffer is not supported.");throw new TypeError(h("invalid argument. Must provide a length, typed array, array-like object, or an iterable. Value: `%s`.",x))}if(v<=0)return new b(0);if(1===v)if(t(x=arguments[1]))c=new b(x.length);else if(i(x))c=new b(x);else if(r(x))c=new b(x);else{if(!s(x))throw new TypeError(h("invalid argument. Must provide a length, typed array, array-like object, or an iterable. Value: `%s`.",x));if(!1===u)throw new TypeError(h("invalid argument. Environment lacks Symbol.iterator support. Must provide a length, typed array, or array-like object. Value: `%s`.",x));if(!n(x[m]))throw new TypeError(h("invalid argument. Must provide a length, typed array, array-like object, or an iterable. Value: `%s`.",x));if(x=x[m](),!n(x.next))throw new TypeError(h("invalid argument. Must provide a length, typed array, array-like object, or an iterable. Value: `%s`.",x));c=new b(p(x))}else c=2===v?new b(arguments[1],arguments[2]):new b(arguments[1],arguments[2],arguments[3]);return c.length>0&&(/^complex/.test(y)?j(c,arguments[0]):o(c.length,arguments[0],c,1)),c}export{y as default};
//# sourceMappingURL=index.mjs.map
